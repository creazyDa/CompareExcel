/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.jplus.compare.excel.frame;

import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.jplus.compare.excel.service.CompareService;
import org.jplus.hyb.database.sqlite.SqliteUtil;

/**
 *
 * @author hyberbin
 */
public class StartFrame extends javax.swing.JFrame {

    private final JFileChooser chooseLast = new JFileChooser();
    private final JFileChooser chooseCurrent = new JFileChooser();

    /** Creates new form StartFrame */
    public StartFrame() {
        initComponents();
        Toolkit tk = Toolkit.getDefaultToolkit();
        setLocation((tk.getScreenSize().width - getSize().width) / 2,
                (tk.getScreenSize().height - getSize().height) / 2);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.setResizable(false);
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent event) {
                if (JOptionPane.showConfirmDialog(null, "确认退出？") == 0) {
                    dispose();
                    System.exit(0);
                }
            }
        });
        SqliteUtil.bindAllField(this);
    }

    /** This method is called from within the constructor to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lastExcelPath = new javax.swing.JTextField();
        currentExcelPath = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cellKey = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        nameKey = new javax.swing.JTextField();
        lastSheetName = new javax.swing.JComboBox();
        currentSheetName = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("选择要比对的文件");
        setResizable(false);

        lastExcelPath.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lastExcelPathMouseClicked(evt);
            }
        });

        currentExcelPath.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                currentExcelPathMouseClicked(evt);
            }
        });

        jLabel1.setText("历史文件");

        jLabel2.setText("当前文件");

        jButton1.setText("下一步");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("sheet");

        jLabel4.setText("sheet");

        jLabel5.setText("唯一标识");

        cellKey.setText("员工编号");

        jLabel6.setText("姓名字段");

        nameKey.setText("姓名");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(currentExcelPath)
                    .addComponent(lastExcelPath)
                    .addComponent(cellKey, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nameKey, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lastSheetName, 0, 228, Short.MAX_VALUE)
                            .addComponent(currentSheetName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(lastSheetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lastExcelPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(currentSheetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(currentExcelPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel5)
                    .addComponent(cellKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(nameKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Object currentSelectedItem = currentSheetName.getSelectedItem();
        if(currentSelectedItem==null){
            JOptionPane.showMessageDialog(rootPane, "请选择一个要比较的Sheet");
            return;
        }
        Object lastSelectedItem = lastSheetName.getSelectedItem();
        if(lastSelectedItem==null){
            JOptionPane.showMessageDialog(rootPane, "请选择一个比较的Sheet");
            return;
        }
        SqliteUtil.setProperty("currentSheetName", currentSheetName.getSelectedItem()+"");
        SqliteUtil.setProperty("lastSheetName", lastSheetName.getSelectedItem()+"");
        OptionFrame optionFrame = new OptionFrame(lastExcelPath.getText(), currentExcelPath.getText(), this);
        optionFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void lastExcelPathMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lastExcelPathMouseClicked
        chooseLast.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int intRetVal = chooseLast.showOpenDialog(this);
        if (intRetVal == JFileChooser.APPROVE_OPTION) {
            lastExcelPath.setText(chooseLast.getSelectedFile().getPath());
        }
        List<String> sheetNames = CompareService.getSheetNames(lastExcelPath.getText());
        for (String sheetName : sheetNames) {
            lastSheetName.addItem(sheetName);
        }
        SqliteUtil.setProperty("lastExcelPath", lastExcelPath.getText());
    }//GEN-LAST:event_lastExcelPathMouseClicked

    private void currentExcelPathMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_currentExcelPathMouseClicked
        chooseCurrent.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int intRetVal = chooseCurrent.showOpenDialog(this);
        if (intRetVal == JFileChooser.APPROVE_OPTION) {
            currentExcelPath.setText(chooseCurrent.getSelectedFile().getPath());
        }
        List<String> sheetNames = CompareService.getSheetNames(currentExcelPath.getText());
        for (String sheetName : sheetNames) {
            currentSheetName.addItem(sheetName);
        }
        SqliteUtil.setProperty("currentExcelPath", currentExcelPath.getText());
    }//GEN-LAST:event_currentExcelPathMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cellKey;
    private javax.swing.JTextField currentExcelPath;
    private javax.swing.JComboBox currentSheetName;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField lastExcelPath;
    private javax.swing.JComboBox lastSheetName;
    private javax.swing.JTextField nameKey;
    // End of variables declaration//GEN-END:variables
}
